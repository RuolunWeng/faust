#! /bin/bash -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to plotters					#
#               (c) Grame, 2019                                     #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags

CXXFLAGS=$MYGCCFLAGS

ARCHFILE=$FAUSTARCH/csvplot.cpp
FAUSTFLOAT=float
SOUNDFILELIBS=""

#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# if -omp : -openmp or -fopenmp -> OPENMP
# existing *.dsp files          -> FILES
#

# dispatch command arguments
for p in $@; do

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echo "faust2csvplot [-soundfile] <file.dsp>"
        echo "Use '-soundfile' when compiling DSP using 'soundfile' primitive"
        exit
    fi
 
    if [ $p = "-arch32" ]; then
        PROCARCH="-m32 -L/usr/lib32"
    elif [ $p = "-arch64" ]; then
        PROCARCH="-m64"
    elif [ $p = "-double" ]; then
        FAUSTFLOAT="double"
    elif [ $p = "-soundfile" ]; then
        CXXFLAGS="$CXXFLAGS -DSOUNDFILE"
        SOUNDFILELIBS=`pkg-config --cflags --static --libs sndfile`
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"        
    fi
done

#-------------------------------------------------------------------
# compile the *.dsp files 

for f in $FILES; do
	
	# compile Faust to c++
    faust -i -a $ARCHFILE $OPTIONS "$f" -o "$f.cpp" || exit

	# compile c++ to binary
	(
		${CXX=g++} $CXXFLAGS $PROCARCH $SOUNDFILELIBS $OMP -DFAUSTFLOAT=$FAUSTFLOAT "$f.cpp" -o "${f%.dsp}"
	) > /dev/null || exit
	rm "$f.cpp"

	# collect binary file name for FaustWorks
	BINARIES="$BINARIES${f%.dsp};"
done
echo $BINARIES
