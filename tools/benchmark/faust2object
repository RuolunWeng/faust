#!/bin/bash

#####################################################################
#                                                                   #
#               Compiles Faust DSP to machine code                  #
#               for several CPUs using dynamic-faust                #
#               (c) Grame, 2020                                     #
#                                                                   #
#####################################################################

. faustpath

FILES=""
CPU=""
OPT=""
MULTI=false
ADAPTER=$FAUSTINC/faust/dsp/llvm-dsp-adapter.h
MULTI_ADAPTER=$FAUSTINC/faust/dsp/llvm-dsp-multi.h
dspName=""

while [ $1 ]
do
    p=$1
 
    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echo "faust2object [core2] [penryn] [nehalem] [westmere] [sandybridge] [ivybridge] [haswell] [broadwell] [skylake] [skylake_avx512] [cannonlake] [generic] [-multi] [-opt native|generic] [additional Faust options (-vec -vs 8...)] <file.dsp>"
        echo "Use 'core2' to compile for Core2 CPU"
        echo "Use 'penryn' to compile for Penryn CPU"
        echo "Use 'nehalem' to compile for Nehalem CPU"
        echo "Use 'westmere' to compile for Westmere CPU"
        echo "Use 'sandybridge' to compile for Sandybridge CPU"
        echo "Use 'ivybridge' to compile for Ivybridge CPU"
        echo "Use 'haswell' to compile for Haswell CPU"
        echo "Use 'broadwell' to compile for Broadwell CPU"
        echo "Use 'skylake' to compile for Skylake CPU"
        echo "Use 'skylake_avx512' to compile for Skylake-avx512 CPU"
        echo "Use 'cannonlake' to compile for Cannonlake CPU"
        echo "Use 'generic' to compile for Generic CPU"
        echo "Use '-all' to compile for all CPUs"
        echo "Use '-multi' to compile for several CPUs and aggregate them in a 'multi' class that choose the correct one at runtime"
        echo "Use '-opt native' to activate the best compilation options for the native CPU"
        echo "Use '-opt generic' to activate the best compilation options for a generic CPU"
        exit
    fi

    if [ "$p" = "core2" ] || [ "$p" = "penryn" ] || [ "$p" = "nehalem" ] || [ "$p" = "westmere" ] || [ "$p" = "sandybridge" ] || [ "$p" = "ivybridge" ] || [ "$p" = "haswell" ] || [ "$p" = "broadwell" ] || [ "$p" = "skylake" ] || [ "$p" = "skylake_avx512" ] || [ "$p" = "cannonlake" ] || [ "$p" = "generic" ]; then
        CPU="$CPU $p"
    elif [ $p = "-opt" ]; then
        shift
        OPT=$1
    elif [ $p = "-cn" ]; then
        shift
        dspName=$1
    elif [ $p = "-multi" ]; then
        MULTI=true
        #generic is always added
        CPU="$CPU generic"
    elif [ $p = "-all" ]; then
	    CPU="core2 penryn nehalem westmere sandybridge ivybridge haswell broadwell skylake skylake_avx512 cannonlake"
    elif [[ -f "$p" ]]; then
        FILES="$FILES $p"
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    else
        OPTIONS="$OPTIONS $p"
    fi

shift
done

for p in $FILES; do

    f=$(basename "$p")

    if [ -z $dspName ]; then
        dspName="${f%.dsp}"
    fi

    # discover best compilation options
    if [ "$OPT" = "generic" ]; then
        echo "Look for best compilation options in 'generic' mode..."
        OPTIONS="$OPTIONS $(faustbench-llvm -notrace -generic $OPTIONS $f)"
        echo $OPTIONS
    elif [ "$OPT" = "native" ]; then
        echo "Look for best compilation options in 'native' mode..."
        OPTIONS="$OPTIONS $(faustbench-llvm -notrace $OPTIONS $f)"
        echo $OPTIONS
    fi

    # compile for each CPU
    for cpu in $CPU; do
        echo $cpu
        sed -e "s/mydsp/$dspName$cpu/g" $ADAPTER > $dspName$cpu".h"
        dynamic-faust -target x86_64-apple-darwin15.6.0:$cpu -cn $dspName$cpu $OPTIONS $f -o $dspName$cpu".o"
    done

    # possibly aggregate in a unique multi file
    if [ $MULTI = true ]; then
        # create file
        echo "" > $dspName"multi.h"
        # add conditional #define 'cpu'
        for cpu in $CPU; do
            echo "#define "$cpu >> $dspName"multi.h"
        done
        # class naming
        sed -e "s/mydsp/$dspName/g" $MULTI_ADAPTER >> $dspName"multi.h"
    fi

done
